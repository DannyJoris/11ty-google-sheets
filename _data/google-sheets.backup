import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';

import 'dotenv/config';

// const GoogleSpreadsheet = require('google-spreadsheet');
// const JWT = require('google-auth-library').JWT;
// console.log(process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL);
// Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
  key: process.env.GOOGLE_PRIVATE_KEY.replace(/\\n/g, "\n"),
  scopes: [
    'https://www.googleapis.com/auth/spreadsheets',
  ],
});

const doc = new GoogleSpreadsheet(process.env.GOOGLE_SHEET_ID, serviceAccountAuth);

await doc.loadInfo(); // loads document properties and worksheets

console.log(doc.title);
// // await doc.updateProperties({ title: 'renamed doc' });
// console.log(doc.sheetsByIndex[0]);
// const sheet = doc.sheetsByIndex[490367433]; // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
const sheet = doc.sheetsById[0]; // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
console.log(sheet.title);

// const headerRow = await sheet.loadHeaderRow();
// console.log(headerRow);

// console.log(sheet);
await sheet.loadHeaderRow();

// `sheet.headerValues` contains the headings from the first row
console.log(sheet.headerValues);

const rows = await sheet.getRows(); // can pass in { limit, offset }

// Log each row's data
rows.forEach((row, i) => {
  console.log({
    week: row.get('Week'),
    mon: row.get('Mon'),
    tue: row.get('Tue'),
    wed: row.get('Wed'),
    thu: row.get('Thu'),
    fri: row.get('Fri'),
    sat: row.get('Sat'),
    sun: row.get('Sun'),
    total: row.get('Total'),
  }); // `_rawData` contains the row's data as an array
  // Alternatively, access columns directly by header name, e.g., `row.HeaderName`
});

// const newRow = await sheet.addRow({ Week: 'foobar', Total: '123' });


// adding / removing sheets
// const newSheet = await doc.addSheet({ title: 'another sheet' });
// await newSheet.delete();
